<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="omnia-fixedsolutions" ignored="1" name="Default test" tests="2" failures="1" timestamp="07 Jun 2019 01:30:58 GMT" time="4.636" errors="0">
  <testcase name="UserCanRegisterSuccessfully" time="4.427" classname="tests.UserRegisterarionWithDDTAndDataProvider">
    <failure type="java.lang.IllegalArgumentException" message="Keys to send should be a not null CharSequence">
      <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequenceat org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)at com.sun.proxy.$Proxy12.sendKeys(Unknown Source)at Pages.PageBase.setTextElementText(PageBase.java:23)at Pages.UserRegisterationPage.userRegisteration(UserRegisterationPage.java:43)at tests.UserRegisterarionWithDDTAndDataProvider.UserCanRegisterSuccessfully(UserRegisterarionWithDDTAndDataProvider.java:40)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
    </failure>
  </testcase> <!-- UserCanRegisterSuccessfully -->
  <testcase name="RegisteredUserCanLogout" time="0.0" classname="tests.UserRegisterarionWithDDTAndDataProvider">
    <skipped/>
  </testcase> <!-- RegisteredUserCanLogout -->
  <testcase name="RegisteredUserCanLogin" time="0.0" classname="tests.UserRegisterarionWithDDTAndDataProvider">
    <ignored/>
  </testcase> <!-- RegisteredUserCanLogin -->
</testsuite> <!-- Default test -->
